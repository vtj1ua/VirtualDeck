@model VirtualDeckWeb.Models.TokenPackViewModel
@using VirtualDeckGenNHibernate.EN.VirtualDeck;

@{
    ViewBag.Title = "Detalle Pack Tokens";
}

@if (Session["user"] != null)
{
    VirtualUserEN en = Session["user"] as VirtualUserEN;

    int id = en.Id;

    <div class="detalleTokens">
        <p class="userInfoTokens tokensTienda"><strong>Tokens: </strong><span>@en.Tokens <img src="~/Resources/token.png" /></span></p>
    </div>

}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
            <div class="centered-col-container">
                <div class="token-pack-container">
                    <div>
                        <h3>@Html.DisplayFor(modelItem => Model.Name)</h3>
                        <img src="~/Resources/token.png" alt="token">
                    </div>
                    <div style="margin: auto">
                        <h4>@Html.DisplayFor(modelItem => Model.Tokens) Tokens</h4>
                        <h4>@Html.DisplayFor(modelItem => Model.Price) €</h4>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
            <div class="centered-col-container">
                @using (Html.BeginForm("Buy", "TokenPack", FormMethod.Post, new { @class = "default-form", role = "form", style="padding-top: 0; width: 350px;" }))
                {
                    @Html.AntiForgeryToken()
                    <h3 class="section-title">Introduzca los datos bancarios</h3>
                                        
                    <div class="default-form-group">
                        @Html.LabelFor(m => m.AccountHolder)
                        <div class="text-box-container">
                            @Html.TextBoxFor(m => m.AccountHolder, new { @class = "text-box" })
                            <span class="text-box-outline"></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.AccountHolder, "", new { @class = "error-message" })
                    </div>

                    <div class="default-form-group">
                        @Html.LabelFor(m => m.ExpiryDate)
                        <div class="text-box-container">
                            @Html.TextBoxFor(m => m.ExpiryDate, "{0:dd/MM/yyyy}", new { @class = "text-box" })
                            <span class="text-box-outline"></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.ExpiryDate, "", new { @class = "error-message" })
                    </div>

                    <div class="default-form-group">
                        @Html.LabelFor(m => m.CardNumber)
                        <div class="text-box-container">
                            @Html.TextBoxFor(m => m.CardNumber, new { @class = "text-box" })
                            <span class="text-box-outline"></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.CardNumber, "", new { @class = "error-message" })
                    </div>

                    <div class="default-form-group">
                        @Html.LabelFor(m => m.CVV)
                        <div class="text-box-container">
                            @Html.TextBoxFor(m => m.CVV, new { @class = "text-box" })
                            <span class="text-box-outline"></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.CVV, "", new { @class = "error-message" })
                    </div>

                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.Name)
                    @Html.HiddenFor(m => m.Tokens)

                    <div class="form-submit-group">
                        <input type="submit" value="Realizar compra" class="action-button" />
                    </div>
                }
            </div>
        </div>
    </div>


    <!--
        @using (Html.BeginForm("Buy", "TokenPack", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>Introduzca los datos bancarios</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.AccountHolder, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.AccountHolder, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AccountHolder, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ExpiryDate, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.ExpiryDate, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ExpiryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CardNumber, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.CardNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CardNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CVV, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.CVV, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CVV, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(m => m.Id)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Realizar compra" class="action-button" />
                </div>
            </div>
        }-->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

