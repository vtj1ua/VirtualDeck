@model IEnumerable<VirtualDeckWeb.Models.CardViewModel>
@using VirtualDeckGenNHibernate.Enumerated.VirtualDeck;
@using VirtualDeckGenNHibernate.EN.VirtualDeck;

@Scripts.Render("~/Scripts/shop-filters.js")

@{
    ViewBag.Title = "Cartas";
}

@if (Session["user"] != null)
{
        VirtualUserEN en = Session["user"] as VirtualUserEN;

        int id = en.Id;
        
        <div>
            <p class="userInfoTokens tokensTienda"><strong>Tokens: </strong><span>@en.Tokens <img src="~/Resources/token.png" /></span></p>
        </div>

}


<div class="tabs">
    <ul class="nav justify-content-center">
        <li class="nav-item">
            @Html.ActionLink("Cartas", "Cards", null, new { @class = "selected" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Sobres", "Packs")
        </li>
        @{
            if (Session["User"] != null)
            {
                <li class="nav-item">
                    @Html.ActionLink("Tokens", "TokenPacks")
                </li>
            }
        }
    </ul>
</div>

@{
    string filterSearch = ViewBag.Search ?? "";
    int filterMinPrice = ViewBag.MinPrice ?? 0;
    int filterMaxPrice = ViewBag.MaxPrice ?? 1000000;
    int filterType = (int)(ViewBag.Type ?? CardTypeEnum.All);
    if (filterType == (int)(CardTypeEnum.All))
    {
        filterType = (int)(CardTypeEnum.None);
    }
    int filterRarity = (int)(ViewBag.Rarity ?? RarityEnum.All);
    if (filterRarity == (int)RarityEnum.All)
    {
        filterRarity = (int)(RarityEnum.None);
    }
}

<form class="forms" asp-controller="ShopController" asp-action="Cards">
    <input type="text" name="search" placeholder="Introduce un nombre o descripción" value="@filterSearch" />
    <input class="bot-userInfo action-button" type="submit" value="Buscar" />

    <div class="shop-filters-container">
        <div>
            <h2>Filtros</h2>
            <label for="open-close-filters">Cerrar</label>
        </div>

        <input type="checkbox" id="open-close-filters" hidden />
        <div>
            <fieldset class="shop-filters-price">
                <h3>Precio</h3>
                <span>
                    <label>Mínimo</label>
                    <input type="number" name="minPrice" min="0" max="1000000" value="@filterMinPrice" />
                </span>
                <span>
                    <label>Máximo</label>
                    <input type="number" name="maxPrice" min="0" max="1000000" value="@filterMaxPrice" />
                </span>
            </fieldset>
            <div>
                <fieldset class="shop-filters-types-and-rarity">
                    <h3>Tipo</h3>
                    @{
                        string[] typeNames = { "Bicho", "Dragon", "Electrico", "Lucha", "Fuego",
                                           "Volador", "Fantasma", "Hierba", "Tierra", "Hielo",
                                           "Normal", "Veneno", "Psiquico", "Roca", "Agua"};
                        int currentVal = 1;
                        for (int i = 0; i < typeNames.Length; ++i)
                        {
                            bool isChecked = (currentVal & filterType) != 0;
                            <span>
                                <label>@typeNames[i]</label>
                                <input type="checkbox" onchange="SetType(this, @currentVal)" checked="@isChecked" />
                            </span>
                            currentVal <<= 1;
                        }
                    }
                    <input id="type-input" name="type" type="hidden" value="@filterType" />
                </fieldset>
                <fieldset class="shop-filters-types-and-rarity">
                    <h3>Rareza</h3>
                    @{
                        string[] rarityNames = { "Básica", "Común", "Poco común", "Rara", "Epica", "Legendaria", "Mítica" };
                        currentVal = 1;
                        for (int i = 0; i < rarityNames.Length; ++i)
                        {
                            bool isChecked = (currentVal & filterRarity) != 0;
                            <span>
                                <label>@rarityNames[i]</label>
                                <input type="checkbox" onchange="SetRarity(this, @currentVal)" checked="@isChecked" />
                            </span>
                            currentVal <<= 1;
                        }
                    }
                    <input id="rarity-input" name="rarity" type="hidden" value="@filterRarity" />
                </fieldset>
            </div>
        </div>
    </div>
</form>


@Html.Partial("CardListShopPartial", Model)
<ul class="pagination pagList">
    @if (ViewBag.Total > 1 && ViewBag.Page <= ViewBag.MaxPage)
    {
        if (ViewBag.Page == 0)
        {
            <li class="disabled">
                @if (this.ViewBag.FiltersAreSet != null && this.ViewBag.FiltersAreSet)
                {
                    @Html.ActionLink("❰❰", "Cards", new { page = 0, search = ViewBag.Search, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, type = ViewBag.Type, rarity = ViewBag.Rarity })
                }
                else
                {
                    @Html.ActionLink("❰❰", "Cards", new { page = 0 })
                }
            </li>
        }
        else
        {
            <li>
                @if (this.ViewBag.FiltersAreSet != null && this.ViewBag.FiltersAreSet)
                {
                    @Html.ActionLink("❰❰", "Cards", new { page = 0, search = ViewBag.Search, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, type = ViewBag.Type, rarity = ViewBag.Rarity })
                }
                else
                {
                    @Html.ActionLink("❰❰", "Cards", new { page = 0 })
                }
            </li>
        }
        if (ViewBag.Total > 0)
        {
            bool antes = false;
            bool desps = false;
            for (int i = 1; i <= ViewBag.Total; i++)
            {
                if (ViewBag.Page + 1 == i)
                {
                    <li class="active">
                        @if (this.ViewBag.FiltersAreSet != null && this.ViewBag.FiltersAreSet)
                        {
                            @Html.ActionLink(i.ToString(), "Cards", new { page = i - 1, search = ViewBag.Search, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, type = ViewBag.Type, rarity = ViewBag.Rarity })
                        }
                        else
                        {
                            @Html.ActionLink(i.ToString(), "Cards", new { page = i - 1 })
                        }
                    </li>
                }
                else if (ViewBag.Page + 1 == i - 1 || ViewBag.Page + 1 == i - 2 || ViewBag.Page + 1 == i + 1 || ViewBag.Page + 1 == i + 2)
                {
                    <li>
                        @if (this.ViewBag.FiltersAreSet != null && this.ViewBag.FiltersAreSet)
                        {
                            @Html.ActionLink(i.ToString(), "Cards", new { page = i - 1, search = ViewBag.Search, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, type = ViewBag.Type, rarity = ViewBag.Rarity })
                        }
                        else
                        {
                            @Html.ActionLink(i.ToString(), "Cards", new { page = i - 1 })
                        }
                    </li>
                }
                else
                {
                    if (i < ViewBag.Page + 1 && Math.Abs(i - (ViewBag.Page + 1)) >= 3 && antes == false)
                    {
                        <li class="puntosSusp">
                            <a>...</a>
                        </li>

                        antes = true;
                    }
                    if (i > ViewBag.Page + 1 && Math.Abs(i - (ViewBag.Page + 1)) >= 3 && desps == false)
                    {
                        <li class="puntosSusp">
                            <a>...</a>
                        </li>
                        desps = true;
                    }
                }
            }
        }
        if (ViewBag.Page == ViewBag.Total - 1)
        {
            <li class="disabled">
                @if (this.ViewBag.FiltersAreSet != null && this.ViewBag.FiltersAreSet)
                {
                    @Html.ActionLink("❱❱", "Cards", new { page = ViewBag.Total - 1, search = ViewBag.Search, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, type = ViewBag.Type, rarity = ViewBag.Rarity })
                }
                else
                {
                    @Html.ActionLink("❱❱", "Cards", new { page = ViewBag.Total - 1 })
                }
            </li>
        }
        else
        {
            <li>
                @if (this.ViewBag.FiltersAreSet != null && this.ViewBag.FiltersAreSet)
                {
                    @Html.ActionLink("❱❱", "Cards", new { page = ViewBag.Total - 1, search = ViewBag.Search, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, type = ViewBag.Type, rarity = ViewBag.Rarity })
                }
                else
                {
                    @Html.ActionLink("❱❱", "Cards", new { page = ViewBag.Total - 1 })
                }
            </li>
        }
    }
</ul>