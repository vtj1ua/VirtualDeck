@model VirtualDeckWeb.Models.VirtualUserViewModel
@using VirtualDeckGenNHibernate.EN.VirtualDeck;
@using VirtualDeckWeb.Assemblers;
@using VirtualDeckWeb.Models;

@{
    ViewBag.Title = "Editar Perfil";
}

<div class="container">
    <div class="row">

        @{
            VirtualUserEN user = Session["User"] as VirtualUserEN;
            if (user != null)

            {
                <div class="centered-col-container">
                    @using (Html.BeginForm("Edit", "VirtualUser", FormMethod.Post, new { @class = "default-form default-form-border", @enctype = "multipart/form-data"  }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        <div class="default-form-group">
                            @Html.LabelFor(model => model.UserName)
                            <div class="text-box-container">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "text-box", @Value = user.UserName, @placeholder = "Introduce un nombre usuario" } })
                                <span class="text-box-outline"></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "error-message" })
                        </div>

                        <div class="default-form-group">
                            @Html.LabelFor(model => model.Description)
                            @Html.TextAreaFor(model => model.Description, new { @class = "text-area", @Value = user.Description, @placeholder = "Introduce una descripción" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error-message" })
                        </div>

                        <div class="form-group widthForm imgDivForm">
                            @Html.LabelFor(model => model.Img)
                            <div id="foto-reg">
                                <input class="notVisible" type="file" name="file" accept="image/*" onchange="previsualizarImagen(this);">
                                <img id="photo-usu" class="form-image" height="200" width="200" src="~/Resources/@Model.Img" alt="Foto del usuario" onclick="return cargarImagen(this.parentNode);">
                                <footer class="foto-footer">
                                    <a class="action-button margin-a" onclick="return cargarImagen(this.parentNode.parentNode);">Buscar Foto</a>
                                    <a class="cancel-button margin-a" onclick="return borrarFoto(this.parentNode.parentNode);">Borrar Foto</a>
                                </footer>
                                <input type="hidden" id="hiddenInput" name="DeletedImg" value="0" />
                            </div>
                        </div>

                        <div class="default-form-group">
                            <input class="acept-button" type="submit" value="Modificar" />
                        </div>
                    }
                </div>

            }
            else
            {
                //MOSTRAR MENSAJE DE NO SE PUEDE ACCEDER
                <p>No se puede acceder a esta página si no estás logueado</p>
            }
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/script.js")
}
