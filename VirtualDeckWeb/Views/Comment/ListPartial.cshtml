@using VirtualDeckWeb.Models;
@using VirtualDeckGenNHibernate.EN.VirtualDeck;
@model  Tuple<IEnumerable<CommentViewModel>, CommentViewModel>

@{
    bool userIsLogged = (Session["User"] as VirtualUserEN) != null;
}

<h2>Comentarios</h2>
@{
    if(userIsLogged)
    {
        using (Html.BeginForm("Create", "Comment", FormMethod.Post, new { @class = "container" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="row">
                <!--@Html.TextAreaFor(m => Model.Item2.Text, new { @class = "col-lg-8 col-md-8 col-sm-6 col-xs-12", @style="background-color: black;" }) -->
                <textarea name="Text" class = "col-lg-8 col-md-8 col-sm-6 col-xs-12" style="background-color: black;"></textarea>
                <input type="hidden" name="ProductId" value="@Model.Item2.ProductId" />
                <input type="submit" value="Publicar comentario" class="col-lg-4 col-md-4 col-sm-6 col-xs-12 accept-button" />
            </div>
        }
    }  
}

<div class="container">
    <div class="row">
        @foreach (var item in Model.Item1)
        {
            <div class="col-xs-12 col-md-12 col-lg-12 product-comment">
                <h4>@Html.DisplayFor(modelItem => item.UserName)</h4>
                <p>@Html.DisplayFor(modelItem => item.Text)</p>
            </div>
        }
    </div>
</div>
