<?xml version="1.0" encoding="utf-8" ?>
		<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
		                   assembly="VirtualDeckGenNHibernate"
		                   namespace="VirtualDeckGenNHibernate.EN.VirtualDeck">
		    
		    
			
				
<joined-subclass name="PackEN" extends="VirtualDeckGenNHibernate.EN.VirtualDeck.ProductEN" table="Pack"> 
	<key>
    	
				<column name="idProduct"/>
		
    	
   	</key>

			
					
					<property name="Rarity" > 
						<column name="rarity"  not-null="true"/>
					</property>
					<property name="MaxNumCards" type="integer"> 
						<column name="maxNumCards"  not-null="true"/>
					</property>
					<property name="MinNumCards" type="integer"> 
						<column name="minNumCards"  not-null="true"/>
					</property>
					<property name="CardTypes" > 
						<column name="cardTypes"  not-null="true"/>
					</property>
					<property name="CardRarities" > 
						<column name="cardRarities"  not-null="true"/>
					</property>
			
			
		  			
						<bag name="UserPacks" >
							<key>
							
								
								<column name="FK_idProduct_idPack"/>
					      	</key>
							<one-to-many class="VirtualDeckGenNHibernate.EN.VirtualDeck.UserPackEN"/>
					    </bag>
					
			
			
			
			
			
					
					
					
					
					
					
		
 	  
		 </joined-subclass>
		  
		  <query name="PackENReadAllHQL">from PackEN</query>
		  <query name="PackENpacksByRarityHQL"><![CDATA[ FROM PackEN as pack where pack.Rarity = :p_rarity]]></query>
		  <query name="PackENpacksByNameOrDescriptionHQL"><![CDATA[FROM PackEN as pack where pack.Name like :p_name or pack.Description like :p_name]]></query>
		  <query name="PackENpacksByAllFiltersHQL"><![CDATA[FROM PackEN as pack WHERE (pack.Name LIKE :p_name OR pack.Description LIKE :p_name) AND pack.Price >= :p_min_price AND pack.Price <= :p_max_price AND  (pack.CardTypes & :p_type) != 0 AND (pack.Rarity & :p_rarity) != 0 ORDER BY pack.Rarity ASC]]></query>
		</hibernate-mapping>
	